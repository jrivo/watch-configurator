{"version":3,"sources":["images/image-placeholder.jpg","components/ImageContainer.js","context/configuratorContext.js","components/OptionsItem.js","components/OptionsList.js","components/Configurator.js","App.js","reportWebVitals.js","index.js"],"names":["ImageContainer","src","placeholderImage","ConfiguratorContext","React","createContext","OptionsItem","name","strap","useContext","setContext","console","log","className","onChange","type","value","OptionsList","data","context","collection","map","c","dial","material","size","style","color","Configurator","useState","useEffect","dataJson","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6nBAAe,G,YAAA,IAA0B,+C,OCU1BA,EARQ,WACrB,OACE,8BACE,qBAAKC,IAAKC,OCHHC,EAAsBC,IAAMC,gBCC1B,SAASC,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC1C,EAA8BC,qBAAWN,GAAzC,mBAAgBO,GAAhB,WACAC,QAAQC,IAAIL,GAMZ,OACE,sBAAgBM,UAAU,OAAOC,SALb,WACpBH,QAAQC,IAAIJ,GACZA,EAAQE,EAAWF,GAASG,QAAQC,IAAI,KAGxC,UACE,gCAAQL,IACR,uBAAOQ,KAAK,QAAQR,KAAK,aAAaS,MAAOT,MAFrCA,GCRC,SAASU,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,EAAqBT,qBAAWN,GAAhC,mBAAOgB,EAAP,UAEA,OADAD,EAAKE,WAAWC,KAAI,SAACC,GAAD,OAAOX,QAAQC,IAAIU,MAErC,sBAAKT,UAAU,0BAAf,UACE,gCACE,6CACA,qBAAKA,UAAU,OAAf,SACGK,EAAKE,WAAWC,KAAI,SAACC,GACpB,OAAO,cAAChB,EAAD,CAAaC,KAAMe,YAKhC,gCACE,uCACA,qBAAKT,UAAU,OAAf,SACGK,EAAKK,KAAKF,KAAI,SAACC,GACd,OAAO,cAAChB,EAAD,CAAaC,KAAMe,YAKhC,gCACE,2CACA,qBAAKT,UAAU,OAAf,SACGK,EAAKV,MAAMa,KAAI,SAACC,GACf,OAAO,cAAChB,EAAD,CAAaC,KAAMe,EAAEE,SAAUhB,MAAOc,YAKnD,gCACE,uCACA,qBAAKT,UAAU,OAAf,SACGK,EAAKO,KAAKJ,KAAI,SAACC,GACd,OAAO,cAAChB,EAAD,CAAaC,KAAMe,YAKhC,gCACE,wCACA,qBAAKT,UAAU,OAAf,SACGM,EAAQO,MAAML,KAAI,SAACC,GAClB,OAAO,cAAChB,EAAD,CAAaC,KAAMe,YAKhC,gCACE,yCACA,qBAAKT,UAAU,OAAf,SACGM,EAAQQ,MAAMN,KAAI,SAACC,GAClB,OAAO,cAAChB,EAAD,CAAaC,KAAMe,e,WCtCvBM,EAfM,WACnB,MAAwBC,mBAAS,IAAjC,6BAMA,OAJAC,qBAAU,cAGP,IAED,sBAAKjB,UAAU,4CAAf,UACE,cAAC,EAAD,IACA,cAACI,EAAD,CAAaC,KAAMa,QCeVC,MAxBf,WACE,MAA8BH,mBAAS,CACrCL,SAAU,UACVE,MAAO,CAAC,QACRC,MAAO,CACL,SACA,QACA,MACA,OACA,QACA,OACA,OACA,YACA,QACA,WAbJ,mBAAOR,EAAP,KAAgBT,EAAhB,KAgBA,OACE,cAACP,EAAoB8B,SAArB,CAA8BjB,MAAO,CAACG,EAAST,GAA/C,SACE,cAAC,EAAD,OCbSwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0e760f5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image-placeholder.3c0a422b.jpg\";","import placeholderImage from \"../images/image-placeholder.jpg\";\n\nconst ImageContainer = () => {\n  return (\n    <div>\n      <img src={placeholderImage} />\n    </div>\n  );\n};\n\nexport default ImageContainer;\n","import React from \"react\";\n\nexport const ConfiguratorContext = React.createContext();","import React, { useContext } from \"react\";\nimport { ConfiguratorContext } from \"../context/configuratorContext\";\n\nexport default function OptionsItem({ name, strap }) {\n  const [context, setContext] = useContext(ConfiguratorContext);\n  console.log(name);\n\n  const updateChoices = () => {\n    console.log(strap)\n    strap ? setContext(strap) : console.log(\"\");\n  };\n  return (\n    <div key={name} className=\"px-2\" onChange={updateChoices}>\n      <label>{name}</label>\n      <input type=\"radio\" name=\"collection\" value={name}></input>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport OptionsItem from \"./OptionsItem\";\nimport { ConfiguratorContext } from \"../context/configuratorContext\";\n\nexport default function OptionsList({ data }) {\n  const [context, _] = useContext(ConfiguratorContext);\n  data.collection.map((c) => console.log(c));\n  return (\n    <div className=\"flex flex-col flex-grow\">\n      <div>\n        <div>Collection</div>\n        <div className=\"flex\">\n          {data.collection.map((c) => {\n            return <OptionsItem name={c} />;\n          })}\n        </div>\n      </div>\n\n      <div>\n        <div>Dial</div>\n        <div className=\"flex\">\n          {data.dial.map((c) => {\n            return <OptionsItem name={c} />;\n          })}\n        </div>\n      </div>\n\n      <div>\n        <div>Material</div>\n        <div className=\"flex\">\n          {data.strap.map((c) => {\n            return <OptionsItem name={c.material} strap={c}/>;\n          })}\n        </div>\n      </div>\n\n      <div>\n        <div>Size</div>\n        <div className=\"flex\">\n          {data.size.map((c) => {\n            return <OptionsItem name={c} />;\n          })}\n        </div>\n      </div>\n\n      <div>\n        <div>Style</div>\n        <div className=\"flex\">\n          {context.style.map((c) => {\n            return <OptionsItem name={c} />;\n          })}\n        </div>\n      </div>\n\n      <div>\n        <div>Colour</div>\n        <div className=\"flex\">\n          {context.color.map((c) => {\n            return <OptionsItem name={c} />;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ImageContainer from \"./ImageContainer\";\nimport OptionsList from \"./OptionsList\";\nimport dataJson from \"../options.json\";\n\nconst Configurator = () => {\n  const [data, setData] = useState({});\n  \n  useEffect(() => {\n    // console.log(\"setdata with\",dataJson)\n    // setData(dataJson);\n  }, []);\n  return (\n    <div className=\"h-screen flex justify-center items-center\">\n      <ImageContainer />\n      <OptionsList data={dataJson} />\n    </div>\n  );\n};\n\nexport default Configurator;\n","import \"./App.css\";\nimport \"./tailwind.min.css\";\nimport Configurator from \"./components/Configurator\";\nimport { ConfiguratorContext } from \"./context/configuratorContext\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [context, setContext] = useState({\n    material: \"leather\",\n    style: [\"thin\"],\n    color: [\n      \"purple\",\n      \"green\",\n      \"red\",\n      \"pink\",\n      \"brown\",\n      \"blue\",\n      \"gray\",\n      \"dark-blue\",\n      \"white\",\n      \"black\",\n    ],\n  });\n  return (\n    <ConfiguratorContext.Provider value={[context, setContext]}>\n      <Configurator />\n    </ConfiguratorContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}